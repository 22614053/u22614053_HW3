@model u22614053_HW3.Models.LibraryVM
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

<div class="container">

    <div class="row">
        <div class="d-flex justify-content-between">
            <div class="text-left">
                <h3 class="text-left" style="font-family:'Curlz MT'">Author</h3>
            </div>
            <div class="text-right">
                <button class="btn btn-outline-success open-create-author-modal">Create</button>
            </div>
        </div>

        <br />
        <table class="table author-table"  style="background-color: #ececec; padding: 20px; border-radius: 5px; text-align: center" >
            <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var author in Model.Authors)
                {
                    <tr>
                        <td>@author.name</td>
                        <td>@author.surname</td>
                        <td>
                            <button class="btn btn-primary open-edit-student-modal">Edit</button>
                            <button class="btn btn-danger open-delete-confirmation-modal">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- Modal for Creating New Author -->
<div class="modal fade" id="createauthorModal" tabindex="-1" role="dialog" aria-labelledby="createauthorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createauthorModalLabel">Create New Author</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createauthorForm">
                    <div class="form-group">
                        <label for="name">Name:</label>
                        <input type="text" class="form-control" id="name">
                    </div>
                    <div class="form-group">
                        <label for="surname">Surname:</label>
                        <input type="text" class="form-control" id="surname">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="createauthorModal">Close</button>
                <button type="button" class="btn btn-primary" id="createauthorButton">Create</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Author Modal -->
<div class="modal fade" id="editStudentModal" tabindex="-1" role="dialog" aria-labelledby="editStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStudentModalLabel">Edit Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editStudentForm">
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" class="form-control" id="editName" placeholder="Student Name">
                    </div>
                    <div class="form-group">
                        <label for="editSurname">Surname</label>
                        <input type="text" class="form-control" id="editSurname" placeholder="Student Surname">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEditButton">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this student?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>
<!-- Pagination for Author -->
<div class="text-center">
    @if (Model.TotalauthorPages > 1)
    {
        if (Model.AuthorPage > 1)
        {
            <a href="@Url.Action("About", new { authorPage = 1, typePage = Model.TypePage })" class="btn btn-primary" aria-label="First Page"><b><<</b></a>
            <a href="@Url.Action("About", new { authorPage = Model.AuthorPage - 1, typePage = Model.TypePage })" class="btn btn-primary" aria-label="Previous"><b><</b></a>
        }

        for (int i = Math.Max(1, Model.AuthorPage - 2); i <= Math.Min(Model.AuthorPage + 2, Model.TotalauthorPages); i++)
        {
            if (i == Model.AuthorPage)
            {
                <span class="btn btn-outline-primary">@i</span>
            }
            else
            {
                <a href="@Url.Action("About", new { authorPage = i, typePage = Model.TypePage })" class="btn btn-primary">@i</a>
            }
        }

        if (Model.AuthorPage < Model.TotalauthorPages)
        {
            <a href="@Url.Action("About", new { authorPage = Model.AuthorPage + 1, typePage = Model.TypePage })" class="btn btn-primary" aria-label="Next"><b>></b></a>
            <a href="@Url.Action("About", new { authorPage = Model.TotalauthorPages, typePage = Model.TypePage })" class="btn btn-primary" aria-label="Last Page"><b>>></b></a>
        }
    }
</div>

<br />

<div class="row">
    <div class="d-flex justify-content-between">
        <div class="text-left">
            <h3 class="text-left" style="font-family:'Curlz MT'">Type</h3>
        </div>
        <div class="text-right">
            <button class="btn btn-outline-success open-create-type-modal">Create</button>
        </div>
    </div>
    <br />
    <table class="table type-table"  style="background-color: #ececec; padding: 20px; border-radius: 5px; text-align: center" >
        <thead>
            <tr>
                <th>Name</th>
                <th>Action</th> 
            </tr>
        </thead>
        <tbody>
            @foreach (var type in Model.Types)
            {
                <tr>
                    <td>@type.name</td>
                    <td>
                        <!-- Edit button -->
                        <button class="btn btn-primary editTypeButton" data-type-id="@type.typeId">Edit</button>

                        <!-- Delete button -->
                        <button class="btn btn-danger deleteTypeButton" data-type-id="@type.typeId">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Modal for Creating New Type -->
    <div class="modal fade" id="createtypeModal" tabindex="-1" role="dialog" aria-labelledby="createtypeModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createtypeModalLabel">Create New Author</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="createtypeForm">
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" class="form-control" id="name">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="createTypeModal">Close</button>
                    <button type="button" class="btn btn-primary" id="createtypeButton">Create</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Editing a Type -->
    <div class="modal fade" id="editTypeModal" tabindex="-1" role="dialog" aria-labelledby="editTypeModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTypeModalLabel">Edit Type</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editTypeForm">
                        <input type="text" id="editTypeName" class="form-control" placeholder="Type Name">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveEditButton">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal for Deleting a Type -->
    <div class="modal fade" id="deleteTypeModal" tabindex="-1" role="dialog" aria-labelledby="deleteTypeModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteTypeModalLabel">Delete Type</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this type?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="deleteTypeButton">Delete</button>
                </div>
            </div>
        </div>
    </div>



    <!-- Pagination for Type -->
    <div class="text-center">
        @if (Model.TotaltypePages > 1)
        {
            if (Model.TypePage > 1)
            {
                <a href="@Url.Action("About", new { authorPage = Model.AuthorPage, typePage = 1 })" class="btn btn-primary" aria-label="First Page"><b><<</b></a>
                <a href="@Url.Action("About", new { authorPage = Model.AuthorPage, typePage = Model.TypePage - 1 })" class="btn btn-primary" aria-label="Previous"><b><</b></a>
            }

            for (int i = Math.Max(1, Model.TypePage - 2); i <= Math.Min(Model.TypePage + 5, Model.TotaltypePages); i++)
            {
                if (i == Model.TypePage)
                {
                    <span class="btn btn-outline-primary">@i</span>
                }
                else
                {
                    <a href="@Url.Action("About", new { authorPage = Model.AuthorPage, typePage = i })" class="btn btn-primary">@i</a>
                }
            }

            if (Model.TypePage < Model.TotaltypePages)
            {
                <a href="@Url.Action("About", new { authorPage = Model.AuthorPage, typePage = Model.TypePage + 1 })" class="btn btn-primary" aria-label="Next"><b>></b></a>
                <a href="@Url.Action("About", new { authorPage = Model.AuthorPage, typePage = Model.TotaltypePages })" class="btn btn-primary" aria-label="Last Page"><b>>></b></a>
            }
        }
    </div>
</div>


<br />
<div class="row">
    <div class="d-flex justify-content-between">
        <div class="text-left">
            <h3 class="text-left" style="font-family:'Curlz MT'">Borrow</h3>
        </div>
        <div class="text-right">
            <button class="btn btn-outline-success">Create</button>
        </div>
    </div>
    <br />
    <table  style="background-color: #ececec; padding: 20px; border-radius: 5px; text-align: center" class="table">
        <thead>
            <tr>
                <th>Student</th>
                <th>BirthDate</th>
                <th>Gender</th>
                <th>Book Title</th>
                <th>Page Count</th>
                <th>Author</th>
                <th>Book Type</th>
                <th>Date Taken</th>
                <th>Brought Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var brw in Model.Borrows)
            {
                <tr>
                    <td>@brw.student.name @brw.student.surname</td>
                    <td>@brw.student.birthdate</td>
                    <td>@brw.student.gender</td>
                    <td>@brw.book.name</td>
                    <td>@brw.book.pagecount</td>
                    <td>@brw.book.author.name @brw.book.author.name</td>
                    <td>@brw.book.type.name</td>
                    <td>@brw.takenDate</td>
                    <td>@brw.broughtDate</td>
                    <td>
                        <div class="d-flex justify-content-center align-items-center">
                            <!-- Edit button -->
                            <button class="btn btn-primary editBorrowButton" data-borrow-id="@brw.borrowId">Edit</button>

                            <!-- Delete button -->
                            <button class="btn btn-danger deleteBorrowButton" data-borrow-id="@brw.borrowId">Delete</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination for Borrows -->
<div class="text-center">
    @if (Model.TotalborrowPages > 1)
    {
        if (Model.BorrowPage > 1)
        {
            <a href="@Url.Action("About", new { borrowPage = Model.BorrowPage - 1, bookPage = Model.BookPage })" class="btn btn-primary" aria-label="Previous">Previous</a>
        }

        for (int i = Math.Max(1, Model.BorrowPage - 2); i <= Math.Min(Model.BorrowPage + 2, Model.TotalborrowPages); i++)
        {
            if (i == Model.BorrowPage)
            {
                <span class="btn btn-outline-primary">@i</span>
            }
            else
            {
                <a href="@Url.Action("About", new { borrowPage = i, bookPage = Model.BookPage })" class="btn btn-primary">@i</a>
            }
        }

        if (Model.BorrowPage < Model.TotalborrowPages)
        {
            <a href="@Url.Action("About", new { borrowPage = Model.BorrowPage + 1, bookPage = Model.BookPage })" class="btn btn-primary" aria-label="Next">Next</a>
        }
    }
</div>





<script>
    $(document).ready(function () {
        let studentToDelete; 
        let studentToEdit;

        $(".open-edit-student-modal").click(function () {
            const row = $(this).closest("tr");

            studentToEdit = {
                name: row.find("td:eq(0)").text(),
                surname: row.find("td:eq(1)").text()
            };

            $("#editName").val(studentToEdit.name);
            $("#editSurname").val(studentToEdit.surname);

            console.log("Edit button clicked. Student data:", studentToEdit);

            $("#editStudentModal").modal("show");
        });

        $("#saveEditButton").click(function () {
            const editedName = $("#editName").val();
            const editedSurname = $("#editSurname").val();

            console.log("Save button clicked. Edited data:", editedName, editedSurname);

            const row = $(".open-edit-student-modal").closest("tr");
            console.log("Row:", row);
            row.find("td:eq(0)").text(editedName);
            row.find("td:eq(1)").text(editedSurname);

            $("#editStudentModal").modal("hide");
        });

        $(".open-delete-confirmation-modal").click(function () {
            const row = $(this).closest("tr");

            studentToDelete = {
                name: row.find("td:eq(0)").text(),
                surname: row.find("td:eq(1)").text(),
            };

            $("#deleteConfirmationModal .student-name").text(studentToDelete.name + " " + studentToDelete.surname);
            $("#deleteConfirmationModal").modal("show");
        });

        $("#confirmDeleteButton").click(function () {

            $("#deleteConfirmationModal").modal("hide");

            if (studentToDelete) {
                const rowToDelete = $("tr:contains('" + studentToDelete.name + "')");
                rowToDelete.remove();
            }
        });
    });
</script>


<!-- JavaScript code -->
<script>
    $('.editTypeButton').click(function () {
        var typeName = $(this).closest('tr').find('td:first').text(); 

        $('#editTypeName').val(typeName);

        $('#editTypeModal').modal('show');
    });

    $('.deleteTypeButton').click(function () {
        $('#deleteTypeModal').modal('show');
    });

    $('#saveEditButton').click(function () {
        var editedName = $('#editTypeName').val();

        $('.editTypeButton:focus').closest('tr').find('td:first').text(editedName);

        $('#editTypeModal').modal('hide');
    });

    $('#confirmDeleteButton').click(function () {
        $('.deleteTypeButton:focus').closest('tr').remove();

        $('#deleteTypeModal').modal('hide');
    });

    $('#saveCreateButton').click(function () {
        var newTypeName = $('#typeName').val();

        var newRow = '<tr><td>' + newTypeName + '</td><td><button class="btn btn-primary editTypeButton">Edit</button><button class="btn btn-danger deleteTypeButton">Delete</button></td></tr>';
        $('table tbody').append(newRow);

        $('#createTypeModal').modal('close');
    });
</script>


<!-- JavaScript code -->
<script>
    $(document).ready(function () {
        $(".open-create-author-modal").click(function () {
            $("#createauthorModal").modal("show");
        });

        $("#createauthorButton").click(function () {
            var name = $("#name").val();
            var surname = $("#surname").val();

            var newRow = $("<tr></tr>");
            newRow.append("<td>" + name + "</td>");
            newRow.append("<td>" + surname + "</td>");

            var buttonCell = $("<td></td>");
            buttonCell.append('<button class="btn btn-primary edit-author-button">Edit</button>');
            buttonCell.append('<button class="btn btn-danger delete-author-button">Delete</button>');

            newRow.append(buttonCell);

            $("table.author-table tbody").append(newRow);

            $("#name").val("");
            $("#surname").val("");

            $("#createauthorModal").modal("hide");

            newRow.find('.edit-author-button').click(function () {

            });
            newRow.find('.delete-author-button').click(function () {

            });
        });
    });
</script>


<script>
    $(document).ready(function () {
        $(".open-create-type-modal").click(function () {
            $("#createtypeModal").modal("show");
        });

        $(document).on('click', '.delete-type-button', function () {
            var row = $(this).closest('tr');

            if (confirm("Are you sure you want to delete this type?")) {
                row.remove(); 
            }
        });

        $("#createtypeButton").click(function () {
            var name = $("#name").val();
            var newRow = $("<tr></tr>");
            newRow.append("<td>" + name + "</td>");

            var buttonCell = $("<td></td>");
            buttonCell.append('<button class="btn btn-primary edit-type-button">Edit</button>');
            buttonCell.append('<button class="btn btn-danger delete-type-button">Delete</button>');

            newRow.append(buttonCell);

            $("table.type-table tbody").append(newRow);

            $("#name").val("");
            $("#createtypeModal").modal("hide");

            newRow.find('.edit-type-button').click(function () {
            });
</script>



<!-- JavaScript code -->
<script>
    $(document).ready(function () {
        $(".open-create-type-modal").click(function () {
            $("#createtypeModal").modal("show");
        });

        $("table.type-table").on("click", ".delete-type-button", function () {
            var row = $(this).closest("tr");

            $("#deleteTypeModal").modal("show");
            $("#deleteTypeButton").click(function () {
                $("#deleteTypeModal").modal("hide");
                row.remove();
            });
        });

        $("#createtypeButton").click(function () {
            var name = $("#name").val();
            var newRow = $("<tr></tr>");
            newRow.append("<td>" + name + "</td>");

            var buttonCell = $("<td></td>");
            buttonCell.append('<button class="btn btn-primary edit-type-button">Edit</button>');
            buttonCell.append('<button class="btn btn-danger delete-type-button">Delete</button>');

            newRow.append(buttonCell);

            $("table.type-table tbody").append(newRow);

            $("#name").val("");
            $("#createtypeModal").modal("hide");

            newRow.find('.edit-type-button').click(function () {
            });
        });
    });
</script>
